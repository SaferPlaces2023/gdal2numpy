on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: pip freeze > requirements.txt

      # Step 1 - Configure AWS Credentials for read data from S3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      # Step 2 - make tests
      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencie
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgdal-dev
          version: 1.0
      - run: |
          export PROJ_LIB=/usr/share/proj
          export GDAL_DATA=/usr/share/gdal
          pip install -U pip wheel setuptools
          pip install numpy==1.24.4 
          pip install GDAL==3.4.1
          pip install -e .
          python tests/test_isfile.py
          python tests/test_open.py
          python tests/test_raster.py
          python tests/test_whatsmyip.py
          python tests/test_wkt.py
          python tests/test_features.py
          python tests/test_gdal_translate.py

      # Step 3: Read the release notes from the file
      - name: Read release notes from file
        id: notes
        run: |
          release_notes=$(cat release-notes.md)
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$release_notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SAFERPLACES_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.notes.outputs.release_notes }}
          draft: false
          prerelease: false