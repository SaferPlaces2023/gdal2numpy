# -------------------------------------------------------------------------------
# Licence:
# Copyright (c) 2012-2020 Valerio for Gecosistema S.r.l.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
#
# Name:        module.py
# Purpose:
#
# Author:      Luzzi Valerio
#
# Created:
# -------------------------------------------------------------------------------
from osgeo import ogr, osr
from .module_MetaData import GetSpatialRef


def Extent(bbox, s_srs=False, t_srs=False):
    """
    Extent
    """

    if s_srs and t_srs:
        s_srs = GetSpatialRef(s_srs)
        t_srs = GetSpatialRef(t_srs)
        transform = osr.CoordinateTransformation(s_srs, t_srs)

        print("EPSGTreatsAsLatLong:", s_srs.EPSGTreatsAsLatLong())

        p1 = ogr.Geometry(ogr.wkbPoint)
        p2 = ogr.Geometry(ogr.wkbPoint)
        if s_srs.IsGeographic() or s_srs.EPSGTreatsAsLatLong():
            p1.AddPoint(bbox[1], bbox[0])
            p2.AddPoint(bbox[3], bbox[2])
        else:
            p1.AddPoint(bbox[0], bbox[1])
            p2.AddPoint(bbox[2], bbox[3])

        p1.Transform(transform)
        p2.Transform(transform)

        if t_srs.IsGeographic() or t_srs.EPSGTreatsAsLatLong():
            return p1.GetY(), p1.GetX(), p2.GetY(), p2.GetX()
        else:
            return p1.GetX(), p1.GetY(), p2.GetX(), p2.GetY()

    return tuple(bbox)








